-- ============================================
-- MIGRATION 016: Fix RLS Notifica√ß√µes para Perfis An√¥nimos
-- ============================================
-- Problema: Pol√≠ticas RLS usavam auth.uid() (NULL para perfis an√¥nimos)
-- Solu√ß√£o: Pol√≠ticas permissivas + filtragem no c√≥digo
-- Data: 25/10/2025
-- ============================================

-- DROP pol√≠ticas antigas (baseadas em auth.uid)
DROP POLICY IF EXISTS "Usu√°rios podem ver suas notifica√ß√µes" ON notifications;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar suas notifica√ß√µes" ON notifications;
DROP POLICY IF EXISTS "Sistema pode criar notifica√ß√µes" ON notifications;

-- CRIAR pol√≠ticas permissivas (compat√≠vel com perfis an√¥nimos)

-- SELECT: Qualquer um pode ver notifica√ß√µes
-- (Filtragem por user_id √© feita no c√≥digo do componente)
CREATE POLICY "Anyone can view notifications"
ON notifications
FOR SELECT
USING (true);

-- INSERT: Qualquer um pode criar notifica√ß√µes
-- (Usado por triggers e sistema)
CREATE POLICY "Anyone can create notifications"
ON notifications
FOR INSERT
WITH CHECK (true);

-- UPDATE: Qualquer um pode atualizar notifica√ß√µes
-- (Marcar como lida, etc)
CREATE POLICY "Anyone can update notifications"
ON notifications
FOR UPDATE
USING (true)
WITH CHECK (true);

-- DELETE: Qualquer um pode deletar notifica√ß√µes
-- (Deletar suas pr√≥prias notifica√ß√µes)
CREATE POLICY "Anyone can delete notifications"
ON notifications
FOR DELETE
USING (true);

-- ============================================
-- FIX: Trigger de Boas-Vindas
-- ============================================
-- Corrigir trigger que usava profile_type (n√£o existe)
-- Deve usar user_type (campo correto)

CREATE OR REPLACE FUNCTION create_welcome_notification()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  -- Criar notifica√ß√£o de boas-vindas para novo usu√°rio
  IF NEW.user_type = 'user' THEN
    INSERT INTO notifications (user_id, title, message, type, metadata)
    VALUES (
      NEW.id,
      'Bem-vinda ao APOIA! üíú',
      'Explore as miss√µes educativas e conecte-se com sua rede de apoio.',
      'info',
      jsonb_build_object('is_welcome', true)
    );
  ELSIF NEW.user_type = 'supporter' THEN
    INSERT INTO notifications (user_id, title, message, type, metadata)
    VALUES (
      NEW.id,
      'Bem-vinda como Apoiadora! ü§ù',
      'Voc√™ agora pode aceitar chamados e oferecer suporte especializado.',
      'info',
      jsonb_build_object('is_welcome', true)
    );
  END IF;
  
  RETURN NEW;
END;
$$;

-- Recriar trigger (garantir que usa a fun√ß√£o corrigida)
DROP TRIGGER IF EXISTS create_welcome_notification_trigger ON profiles;
CREATE TRIGGER create_welcome_notification_trigger
AFTER INSERT ON profiles
FOR EACH ROW
EXECUTE FUNCTION create_welcome_notification();

-- ============================================
-- SEGURAN√áA
-- ============================================
-- IMPORTANTE: A seguran√ßa √© mantida porque:
-- 1. useNotifications hook filtra por userId (.eq("user_id", userId))
-- 2. userId vem do localStorage (profileId √∫nico)
-- 3. Cada usu√°ria s√≥ v√™ suas pr√≥prias notifica√ß√µes via c√≥digo
-- 4. RLS permissivo permite perfis an√¥nimos funcionarem

-- ============================================
-- FIM DA MIGRATION
-- ============================================
